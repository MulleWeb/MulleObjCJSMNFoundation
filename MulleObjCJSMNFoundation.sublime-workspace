{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"cons",
				"consumed_tokens\tabc"
			],
			[
				"re",
				"redirect_exekutor"
			],
			[
				"EXE",
				"EXE_EXTENSION\tabc"
			],
			[
				"MULLE_TE",
				"MULLE_TEST_EXECUTABLE"
			],
			[
				"a",
				"a_out"
			],
			[
				"MULLE_T",
				"MULLE_TEST_EXECUTABLE"
			],
			[
				"MULLE_FLAG",
				"MULLE_FLAG_LOG_SETTINGS\t(mulle-match-match.sh)"
			],
			[
				"CRAF",
				"CRAFTINFO_MARKS"
			],
			[
				"MULLE_",
				"MULLE_UNAME"
			],
			[
				"MU",
				"MULLE_UNAME"
			],
			[
				"MULLE_SO",
				"MULLE_SOURCETREE_STASH_DIRNAME"
			],
			[
				"PRO",
				"PROJECT_ROOT_DIR"
			],
			[
				"MULLE",
				"MULLE_UNAME\tabc"
			],
			[
				"tmp",
				"tmp_file\tabc"
			],
			[
				"remove",
				"remove_file_if_present\tabc"
			],
			[
				"MULLE_SD",
				"MULLE_SDE_SHARE_DIR\tabc"
			],
			[
				"MULLE_FL",
				"MULLE_FLAG_LOG_SETTINGS\tabc"
			],
			[
				"OP",
				"OPTION_CONFIG_FILE"
			],
			[
				"MULE_",
				"MULLE_ENV_FLAGS"
			],
			[
				"MULL",
				"MULLE_FETCH_SEARCH_PATH"
			],
			[
				"OPTION",
				"OPTION_CLOBBER\tabc"
			],
			[
				"sde_dependency_craftinfo_creat",
				"sde_dependency_craftinfo_create_main\t(mulle-sde-craftinfo.sh)"
			],
			[
				"DEF",
				"DEFAULT_IFS\tabc"
			],
			[
				"git_is",
				"git_is_valid_remote_url\t(mulle-fetch-git.sh)"
			],
			[
				"MULLE_FLAG_L",
				"MULLE_FLAG_LOG_SETTINGS\t(mulle-sde-craftinfo.sh)"
			],
			[
				"OPTION_",
				"OPTION_DIRECTORY\tabc"
			],
			[
				"OPT",
				"OPTION_WRITE"
			],
			[
				"time",
				"timeIntervalSinceReferenceDate\tabc"
			],
			[
				"NSTIm",
				"NSTimeInterval\tabc"
			],
			[
				"VAL",
				"VALGRIND_OPTIONS\tabc"
			],
			[
				"OPTIN",
				"OPTION_ANALYZE"
			],
			[
				"in",
				"intersect"
			],
			[
				"incl",
				"include_directories\tcommand"
			],
			[
				"CGRet",
				"CGRectGetMinX"
			],
			[
				"CGRect",
				"CGRectGetMinX"
			],
			[
				"bo",
				"bottom_margin"
			],
			[
				"build",
				"buildstyle"
			],
			[
				"OPTIO",
				"OPTION_RUN"
			],
			[
				"OOPT",
				"OPTION_STANDALONE\tabc"
			],
			[
				"log_",
				"log_entry"
			],
			[
				"MULLE_FLAG_LOG",
				"MULLE_FLAG_LOG_SETTINGS"
			],
			[
				"sed",
				"sed_script"
			],
			[
				"ST",
				"STARTUP_LIBRARY"
			],
			[
				"R",
				"RELEASENOTES"
			],
			[
				"Mu",
				"MULLE_USER_PWD"
			],
			[
				"OPTION_S",
				"OPTION_STARTUP\t(mulle-sde-linkorder.sh)"
			],
			[
				"outp",
				"output-format\t(mulle-sourcetree-to-c)"
			],
			[
				"escap",
				"escaped_key"
			],
			[
				"r",
				"r_source_search_local"
			],
			[
				"log",
				"log_verbose\t(mulle-parallel.sh)"
			],
			[
				"OPTI",
				"OPTION_LIBRARY_STYLE"
			],
			[
				"con",
				"conftext"
			],
			[
				"NO",
				"NO_CMAKE_SYSTEM_PATH"
			],
			[
				"r_e",
				"r_escaped_shell_string"
			],
			[
				"r_esc",
				"r_escaped_shell_string"
			],
			[
				"cmk",
				"cmake_flags"
			],
			[
				"FOund",
				"Foundation"
			],
			[
				"max",
				"maxBufLen\tCFIndex maxBufLen"
			],
			[
				"OPTION_OUTP",
				"OPTION_OUTPUT_OMIT"
			],
			[
				"r_",
				"r_add_line"
			],
			[
				"CON",
				"CONFIGURATION"
			],
			[
				"with",
				"withrpath"
			],
			[
				"w",
				"withldpath"
			],
			[
				"mulle_",
				"mulle_stdlib_allocator"
			],
			[
				"log_w",
				"log_grep_warning_error\t(mulle-test-logging.sh)"
			],
			[
				"e",
				"excludes"
			],
			[
				"sdel_",
				"sde_list_files"
			],
			[
				"C_",
				"C_RESET_BOLD"
			],
			[
				"AF",
				"AFTERFILE"
			],
			[
				"WALK",
				"WALK_INDEX"
			],
			[
				"walk_",
				"walk_dotdump_finished"
			],
			[
				"callk",
				"callbackqualifier"
			],
			[
				"desc",
				"descendqualifier"
			],
			[
				"MULLE_TEST_DIR",
				"MULLE_TEST_VAR_DIR"
			],
			[
				"add",
				"address-filename"
			],
			[
				"r_co",
				"r_colon_concat"
			],
			[
				"u",
				"usr"
			],
			[
				"unpro",
				"unprotect_file_if_exists"
			],
			[
				"OPTION_DO",
				"OPTION_DO_GIT_RELEASE"
			],
			[
				"MULLE_MATCH",
				"MULLE_MATCH_CLEAN_SH"
			],
			[
				"DEPE",
				"DEPENDENCY_DIR\t(mulle.sh)"
			],
			[
				"remove_",
				"remove_file_if_present"
			],
			[
				"int",
				"internal_fail"
			],
			[
				"MULLE_TESD",
				"MULLE_TEST_DIR"
			],
			[
				"MUL",
				"MULLE_VIRTUAL_ROOT=\"${physicaldir"
			],
			[
				"MIL",
				"MULLE_VIRTUAL_ROOT"
			],
			[
				"ex",
				"exekutor_print"
			],
			[
				"OPTION_XC",
				"OPTION_XCODE_ARCHS"
			],
			[
				"OO",
				"OPTION_STYLE"
			],
			[
				"form",
				"formatstring"
			],
			[
				"r_get",
				"r_get_formatstring"
			],
			[
				"r_add",
				"r_nodemarks_add"
			],
			[
				"MULLE_CRA",
				"MULLE_CRAFT_SEARCH_SH\t(mulle-craft-search.sh)"
			],
			[
				"OPTION_PRO",
				"OPTION_PROJECT_NAME"
			],
			[
				"r_f",
				"r_fast_dirname"
			],
			[
				"raw",
				"raw_userinfo"
			],
			[
				"MULLE_SIO",
				"MULLE_SOURCETREE_LIBEXEC_DIR"
			],
			[
				"use",
				"usershare_dir"
			],
			[
				"MULLE_S",
				"MULLE_SOURCETREE_STASH_DIRNAME"
			],
			[
				"else",
				"endless"
			],
			[
				"MULLE_SOUR",
				"MULLE_SOURCETREE_STASH_DIR"
			],
			[
				"mkd",
				"mkdir\t(run-test)"
			],
			[
				"SUB",
				"SUBPROJECT"
			],
			[
				"inte",
				"internal_fail"
			],
			[
				"MULLE_SOURC",
				"MULLE_SOURCETREE_TO_CMAKE_FLAGS\t(sourcetree-task.sh)"
			],
			[
				"MULLE_FLA",
				"MULLE_FLAG_LOG_TERSE\t(mulle-options.sh)"
			],
			[
				"crc",
				"crc_after"
			],
			[
				"eval",
				"eval_exekutor\t(mulle-sde-extension.sh)"
			],
			[
				"esc",
				"escaped_replace"
			],
			[
				"text",
				"text_hdr1"
			],
			[
				"patten",
				"patternfiles"
			],
			[
				"lof",
				"log_info"
			],
			[
				"C_RE",
				"C_RESET_BOLD\t(init-subproject)"
			],
			[
				"REPO",
				"REPOSFILE"
			],
			[
				"mulle-cmak",
				"mulle-cmake-graphviz-include\t(installer)"
			],
			[
				"mulle-c",
				"mulle-c-sourcetree-update\t(CMakeLists.txt)"
			],
			[
				"mulle-cm",
				"mulle-cmake-sourcetree-update\t(CMakeLists.txt)"
			],
			[
				"rm",
				"rmdir_if_empty"
			],
			[
				"CMake",
				"CMakeLists.txt"
			],
			[
				"MULLEV",
				"MULLE_VIRTUAL_ROOT"
			],
			[
				"sep",
				"seperator"
			],
			[
				"cr",
				"craftinfo"
			],
			[
				"r_fas",
				"r_fast_dirname"
			],
			[
				"defi",
				"definitions"
			],
			[
				"MULLE_F",
				"MULLE_FLAG_LOG_VERBOSE\t(mulle-env-environment.sh)"
			],
			[
				"_sou",
				"_sourcetree_banner\t(mulle-sourcetree-list.sh)"
			],
			[
				"shar",
				"shared"
			],
			[
				"rmi",
				"rmdir_safer\t(mulle-sde-clean.sh)"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/MulleJSMNParser.m",
			"settings":
			{
				"buffer_size": 12956,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					13,
					1,
					"insert",
					{
						"characters": "ubui"
					},
					"BQAAAF0WAAAAAAAAXhYAAAAAAAAAAAAAXhYAAAAAAABeFgAAAAAAAAYAAABzdHJ1Y3ReFgAAAAAAAF8WAAAAAAAAAAAAAF8WAAAAAAAAYBYAAAAAAAAAAAAAYBYAAAAAAABhFgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF0WAAAAAAAAYxYAAAAAAAAAAAAAAADwvw"
				],
				[
					14,
					3,
					"left_delete",
					null,
					"AwAAAGAWAAAAAAAAYBYAAAAAAAABAAAAaV8WAAAAAAAAXxYAAAAAAAABAAAAdV4WAAAAAAAAXhYAAAAAAAABAAAAYg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGEWAAAAAAAAYRYAAAAAAAAAAAAAAADwvw"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "nion"
					},
					"BAAAAF4WAAAAAAAAXxYAAAAAAAAAAAAAXxYAAAAAAABgFgAAAAAAAAAAAABgFgAAAAAAAGEWAAAAAAAAAAAAAGEWAAAAAAAAYhYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF4WAAAAAAAAXhYAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "src/MulleJSMNParser.h",
			"settings":
			{
				"buffer_size": 1797,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAE8BAAAAAAAAUAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwEAAAAAAABPAQAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"paste",
					null,
					"AQAAAFABAAAAAAAAfQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAEAAAAAAABQAQAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					3,
					"left_delete",
					null,
					"AwAAAFIBAAAAAAAAUgEAAAAAAAABAAAAIFEBAAAAAAAAUQEAAAAAAAABAAAAL1ABAAAAAAAAUAEAAAAAAAABAAAALw",
					"AQAAAAAAAAABAAAAUwEAAAAAAABTAQAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "\n//"
					},
					"AwAAAFABAAAAAAAAUQEAAAAAAAAAAAAAUQEAAAAAAABSAQAAAAAAAAAAAABSAQAAAAAAAFMBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUAEAAAAAAABQAQAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "JSMN"
					},
					"BQAAAGwBAAAAAAAAbQEAAAAAAAAAAAAAbQEAAAAAAABtAQAAAAAAAAUAAABFeHBhdG0BAAAAAAAAbgEAAAAAAAAAAAAAbgEAAAAAAABvAQAAAAAAAAAAAABvAQAAAAAAAHABAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbAEAAAAAAABxAQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "Searching 143 files for \"metaabi\" (case sensitive)\n\n/home/src/srcO/MulleWeb/MulleObjCJSMNFoundation/src/MulleJSMNParser.m:\n  200        s     = start;\n  201        {\n  202:          mulle_metaabi_struct_voidptr_return( struct { char *characters;\n  203                                                         NSUInteger length; }) param;\n  204  \n\n1 match in 1 file\n",
			"settings":
			{
				"buffer_size": 364,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 364.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"packageres",
				"PackageResourceViewer: Open Resource"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"Jek",
				"Jekyll: Edit _config.yml"
			],
			[
				"xm",
				"Indent XML"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"pa",
				"Package Control: Discover Packages"
			],
			[
				"",
				"Set Syntax: C++"
			]
		],
		"width": 470.0
	},
	"console":
	{
		"height": 429.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/src/srcO/MulleWeb/MulleObjCJSMNFoundation",
		"/home/src/srcO/MulleWeb/MulleObjCJSMNFoundation/src"
	],
	"file_history":
	[
		"/home/src/srcO/MulleObjCExpatFoundation/test/examples/simple.m",
		"/home/src/srcS/mulle-env/mulle-env",
		"/home/src/srcS/mulle-test/mulle-test",
		"/home/src/srcS/mulle-sourcetree/src/mulle-sourcetree-fetch.sh",
		"/home/src/srcS/mulle-sourcetree/src/mulle-sourcetree-db.sh",
		"/home/src/srcS/mulle-test/src/mulle-test-flagbuilder.sh",
		"/home/src/srcS/mulle-dispense/mulle-dispense",
		"/home/src/srcS/mulle-craft/mulle-craft",
		"/home/src/srcS/mulle-sourcetree/src/mulle-sourcetree-nodeline.sh",
		"/home/src/srcS/mulle-sourcetree/src/mulle-sourcetree-node.sh",
		"/home/src/srcS/mulle-sourcetree/src/mulle-sourcetree-nodemarks.sh",
		"/home/src/srcS/mulle-sourcetree/src/mulle-sourcetree-config.sh",
		"/home/src/srcS/mulle-make/src/mulle-make-plugin.sh",
		"/home/src/srcS/mulle-fetch/src/mulle-fetch-plugin.sh",
		"/home/src/srcS/mulle-compile/src/mulle-compile-plugin.sh",
		"/home/src/srcS/mulle-sde/src/mulle-sde-plugin.sh",
		"/home/src/srcS/mulle-sde/mulle-sde",
		"/home/src/srcS/mulle-make/test/mock-autoreconf",
		"/home/src/srcS/mulle-make/test/mock-cmake",
		"/home/src/srcS/mulle-make/test/mock-configure",
		"/home/src/srcS/mulle-make/test/mock-make",
		"/home/src/srcS/mulle-make/test/mock-meson",
		"/home/src/srcS/mulle-make/test/mock-ninja",
		"/home/src/srcS/mulle-make/test/mock-xcodebuild",
		"/home/src/srcS/mulle-make/test/mock-autoconf",
		"/home/src/srcS/mulle-make/src/plugins/cmake.sh",
		"/home/src/srcS/mulle-make/src/mulle-make-definition.sh",
		"/home/src/srcS/mulle-test/src/mulle-test-cmake.sh",
		"/home/src/srcS/mulle-sourcetree/src/mulle-sourcetree-walk.sh",
		"/home/src/srcS/mulle-sourcetree/src/mulle-sourcetree-sync.sh",
		"/home/src/srcS/mulle-sourcetree/src/mulle-sourcetree-action.sh",
		"/home/src/srcS/mulle-craft/src/mulle-craft-execute.sh",
		"/home/src/srcS/mulle-craft/test/mock-mulle-make",
		"/home/src/srcS/mulle-craft/test/mock-xcodebuild",
		"/home/src/srcS/mulle-env/mudo",
		"/home/src/srcS/mulle-test/src/mulle-test-run.sh",
		"/Volumes/Source/srcM/mulle-bashfunctions/src/mulle-nat/bash-script/project/all/ONESHOT_NAME",
		"/Volumes/Source/srcM/mulle-bashfunctions/src/mulle-string.sh",
		"/Volumes/Source/srcS/mulle-env/mudo",
		"/Volumes/Source/srcM/mulle-cpp/craftinfo/xxHash/bin/xxHash-build.sh",
		"/Volumes/Source/srcS/mulle-sde/src/mulle-sde-extension.sh",
		"/Volumes/Source/srcS/mulle-sde/src/mulle-sde-init.sh",
		"/Volumes/Source/srcS/mulle-sde/src/mulle-sde-craftinfo.sh",
		"/Volumes/Source/srcS/mulle-env/mulle-env",
		"/Volumes/Source/srcO/mulle-objc/mulle-objc-developer/src/mulle-objc/objc-cmake/project/all/cmake/share/ExecutableAuxC.cmake",
		"/Volumes/Source/srcO/mulle-c/mulle-c-developer/src/mulle-c/c-cmake/project/all/cmake/share/ExecutableAux.cmake",
		"/Volumes/Source/srcO/mulle-c/mulle-c-developer/src/mulle-c/c-cmake/project/all/cmake/share/CompilerFlagsC.cmake",
		"/Volumes/Source/srcO/mulle-objc/mulle-objc-developer/src/mulle-objc/objc-cmake/project/all/cmake/share/ExecutableObjC.cmake",
		"/Volumes/Source/srcM/mulle-bashfunctions/src/mulle-logging.sh",
		"/Volumes/Source/srcS/mulle-test/src/mulle-test-compiler.sh",
		"/Volumes/Source/srcS/mulle-test/src/mulle-test-execute.sh",
		"/Volumes/Source/srcM/mulle-cpp/test/00_leak/default.environment.windows",
		"/Volumes/Source/srcM/mulle-cpp/test/00_leak/default.environment.mingw",
		"/Volumes/Source/srcM/mulle-cpp/test/00_leak/default.environment",
		"/Volumes/Source/srcS/mulle-sde/src/mulle-sde-subproject.sh",
		"/Volumes/Source/srcS/mulle-sde/src/mulle-sde-clean.sh",
		"/D/srcS/mulle-test/src/mulle-test-init.sh",
		"/D/srcS/mulle-sde/mulle-sde",
		"/D/srcS/mulle-test/src/mulle-test-run.sh",
		"/D/srcS/mulle-sourcetree/test/03-db/run-test",
		"/D/srcS/mulle-sourcetree/src/mulle-sourcetree-list.sh",
		"/D/srcS/mulle-match/mulle-match",
		"/D/srcS/mulle-monitor/mulle-monitor",
		"/D/srcS/mulle-env/mulle-env",
		"/D/srcS/mulle-craft/mulle-craft",
		"/D/srcS/mulle-sourcetree/src/mulle-sourcetree-environment.sh",
		"/D/srcS/mulle-sde/src/mulle-sde-init.sh",
		"/D/srcS/mulle-test/src/mulle-test-environment.sh",
		"/D/srcS/mulle-test/src/mulle-test-compiler.sh",
		"/D/srcS/mulle-test/src/mulle-test-flagbuilder.sh",
		"/D/srcM/mulle-bashfunctions/src/mulle-path.sh",
		"/D/srcS/mulle-sourcetree/src/mulle-sourcetree-cfg.sh",
		"/D/srcS/mulle-sourcetree/mulle-sourcetree",
		"/Volumes/Source/srcO/mulle-c/mulle-c-developer/src/mulle-c/c-demo/demo/library/PROJECT_SOURCE_DIR/PROJECT_NAME-shlib.PROJECT_EXTENSION",
		"/Volumes/Source/srcO/bin/shell-all",
		"/Volumes/Source/srcM/mulle-bashfunctions/src/mulle-array.sh",
		"/Volumes/Source/srcO/_MulleObjCRangeSet/test/40_stress/stress.m",
		"/Volumes/Source/srcO/_MulleObjCRangeSet/test/20_coalesce/complex_coalesce.stdout",
		"/Volumes/Source/srcO/mulle-objc/mulle-objc-runtime/mulle-objc-runtime.sublime-project",
		"/Volumes/Source/srcS/mulle-sde-developer/src/mulle-sde/sde/project/all/.ackrc",
		"/Volumes/Source/srcO/bin/get-all-repo-file-urls",
		"/home/src/srcO/MulleFoundation/Foundation/.travis.yml",
		"/usr/local/llvm/srcL/mulle-clang-90/src/mulle-clang/README.",
		"/home/src/srcO/MulleFoundation/MulleObjCStandardFoundation-startup/RELEASENOTES.md",
		"/home/src/srcO/MulleFoundation/Foundation-startup/RELEASENOTES.md",
		"/home/src/srcO/MulleFoundation/MulleObjCExpatFoundation/src/import.h",
		"/home/src/srcO/MulleFoundation/MulleObjCExpatFoundation/src/import-private.h",
		"/home/src/srcO/MulleFoundation/MulleObjCExpatFoundation/src/include.h",
		"/home/src/srcO/MulleFoundation/MulleObjCExpatFoundation/src/include-private.h",
		"/home/src/srcO/MulleFoundation/MulleObjCExpatFoundation/src/MulleObjCExpatFoundation.h",
		"/home/src/srcO/MulleFoundation/MulleObjCExpatFoundation/src/_MulleObjCExpatFoundation-import.h",
		"/home/src/srcO/MulleFoundation/MulleObjCExpatFoundation/src/_MulleObjCExpatFoundation-import-private.h",
		"/home/src/srcO/MulleFoundation/MulleObjCExpatFoundation/src/_MulleObjCExpatFoundation-include.h",
		"/home/src/srcO/MulleFoundation/MulleObjCExpatFoundation/src/_MulleObjCExpatFoundation-include-private.h",
		"/home/src/srcO/MulleFoundation/MulleObjCExpatFoundation/src/MulleObjCLoader+MulleObjCExpatFoundation.h",
		"/home/src/srcO/mulle-c/mulle-allocator/.travis.yml",
		"/home/src/srcO/mulle-c/mulle-big-container/.travis.yml",
		"/home/src/srcO/mulle-c/mulle-buffer/.travis.yml",
		"/home/src/srcO/mulle-c/mulle-c11/.travis.yml",
		"/home/src/srcO/mulle-c/mulle-c-developer/.travis.yml",
		"/home/src/srcO/mulle-c/mulle-container/.travis.yml",
		"/home/src/srcO/mulle-c/mulle-regex/.travis.yml",
		"/home/src/srcO/mulle-c/mulle-utf/.travis.yml",
		"/home/src/srcO/mulle-c/farmhash-c/.travis.yml",
		"/home/src/srcO/mulle-c/cityhash/.travis.yml",
		"/home/src/srcO/mulle-c/mulle-vararg/.travis.yml",
		"/home/src/srcO/MulleFoundation/MulleObjCOSFoundation/loh",
		"/home/src/srcS/mulle-sourcetree/test/08-userinfo/run-test",
		"/home/src/srcS/mulle-sourcetree/mulle-sourcetree",
		"/home/src/srcS/mulle-fetch/mulle-fetch",
		"/home/src/srcS/mulle-make/mulle-make",
		"/home/src/srcS/mulle-platform/mulle-platform",
		"/home/src/srcS/mulle-sourcetree/mulle-sourcetree-to-c",
		"/home/src/srcS/mulle-match/mulle-match",
		"/home/src/srcS/mulle-monitor/mulle-monitor",
		"/home/src/srcS/mulle-test/src/mulle-test-execute.sh",
		"/Volumes/Source/srcM/mulle-bashfunctions/share/ONESHOT_NAME",
		"/Volumes/Source/srcM/mulle-bashfunctions/src/mulle-exekutor.sh",
		"/Volumes/Source/srcC/homebrew-software/mulle-clang.rb",
		"/Volumes/Source/srcS/mulle-craft/src/mulle-craft-execute.sh",
		"/Volumes/Source/srcS/mulle-sourcetree/mulle-sourcetree-to-c",
		"/Volumes/Source/srcS/mulle-sourcetree/mulle-sourcetree-to-cmake",
		"/Volumes/Source/srcS/mulle-craft/mulle-craft",
		"/Volumes/Source/srcS/mulle-dispense/test/01-dispense/run-test",
		"/Volumes/Source/srcS/mulle-sde/mulle-sde",
		"/Volumes/Source/srcS/mulle-sde/src/mulle-sde-craft.sh",
		"/Volumes/Source/srcS/mulle-sde/src/mulle-sde-craftorder.sh",
		"/Volumes/Source/srcS/mulle-sde/src/mulle-sde-install.sh"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 134.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"metaabi",
			"JSMN_PARENT_LINKS",
			"toksuper",
			"space",
			"process_tokens",
			"start_elem_handler",
			"process_tokens",
			"MulleObjCExpatParser"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"MulleObjCJSMNParser"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/MulleJSMNParser.m",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12956,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								8012
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Objective-C/Objective-C.sublime-syntax",
							"tabs_extra_last_activated": 1675544963.31,
							"tabs_extra_last_activated_sheet_index": 0,
							"tabs_extra_spawned": true
						},
						"translation.x": 0.0,
						"translation.y": 394.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/MulleJSMNParser.h",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1797,
						"regions":
						{
						},
						"selection":
						[
							[
								368,
								368
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 726.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 364,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										188,
										195
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								209,
								209
							]
						],
						"settings":
						{
							"default_dir": "/home/src/srcO/MulleWeb/MulleObjCJSMNFoundation/src",
							"detect_indentation": false,
							"git_gutter_is_enabled": false,
							"line_numbers": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"tabs_extra_last_activated": 1675542654.83,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 38.0
	},
	"input":
	{
		"height": 53.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 124.0
	},
	"pinned_build_system": "",
	"project": "MulleObjCJSMNFoundation.sublime-project",
	"replace":
	{
		"height": 92.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"mulle-make-sde",
				"mulle-make/src/mulle-make-definition.sh"
			],
			[
				"-stanal",
				"mulle-c-developer/src/mulle-c/c-demo/demo/library/PROJECT_SOURCE_DIR/PROJECT_NAME-standalone.PROJECT_EXTENSION"
			],
			[
				"",
				"foundation-developer/src/foundation/objc/sourcetree-executable"
			],
			[
				"sourcetree-exec",
				"foundation-developer/src/foundation/objc-base/sourcetree-executable"
			],
			[
				"sourcetree-exe",
				"mulle-foundation-developer/src/mulle-foundation/objc/sourcetree-executable"
			],
			[
				"soure-",
				"mulle-foundation-developer/src/mulle-foundation/objc/sourcetree-executable"
			],
			[
				"mulle-cmake",
				"mulle-sourcetree/mulle-sourcetree-to-cmake"
			],
			[
				"WORKSPA",
				"mulle-objc-developer/src/mulle-objc/vscode-clang/project/all/PROJECT_NAME.code-workspace"
			],
			[
				"cpp_",
				"mulle-objc-developer/src/mulle-objc/vscode-clang/subproject/all/.vscode/c_cpp_properties.json"
			],
			[
				"workspa",
				"mulle-objc-developer/src/mulle-objc/vscode-clang/project/all/PROJECT_NAME.code-workspace"
			],
			[
				"opti",
				"mulle-objc-developer/src/mulle-objc/objc-cmake/project/all/cmake/share/OptimizedLinkObjC.cmake"
			],
			[
				"compier",
				"mulle-c-developer/src/mulle-c/c-cmake/project/all/cmake/share/CompilerDetectionC.cmake"
			],
			[
				"Exe",
				"/Volumes/Source/srcO/Tests/EOAttributeBitfield/cmake/ExecutableObjC.cmake"
			],
			[
				"launch.json",
				"mulle-objc-developer/src/mulle-objc/vscode-clang/project/all/.vscode/launch.json"
			],
			[
				"json",
				"mulle-sde-developer/src/mulle-sde/vscode-clang/project/executable/.vscode/launch.json"
			],
			[
				"Exce",
				"mulle-sde-developer/src/mulle-sde/cmake/project/all/cmake/share/Executable.cmake"
			],
			[
				"Exec",
				"mulle-sde-developer/src/mulle-sde/cmake/project/all/cmake/share/Executable.cmake"
			],
			[
				"AllLoa",
				"mulle-c-developer/src/mulle-c/c-cmake/project/all/cmake/share/AllLoadC.cmake"
			],
			[
				"version",
				"mulle-project/src/mulle-sde/mulle-project/version"
			],
			[
				"Fallba",
				"mulle-sde-developer/src/mulle-sde/cmake/project/all/cmake/share/FallbackEnvironment.cmake"
			],
			[
				"Envir",
				"mulle-sde-developer/src/mulle-sde/cmake/project/all/cmake/share/Environment.cmake"
			],
			[
				"mulle-test-run",
				"mulle-test/src/mulle-test-run.sh"
			],
			[
				"mulle-soutce",
				"mulle-sourcetree/mulle-sourcetree-to-cmake"
			],
			[
				"mulle-sourcetree-to-cmake",
				"mulle-sourcetree/mulle-sourcetree-to-cmake"
			],
			[
				"tool",
				"mulle-sde-developer/src/mulle-sde/sde/tool"
			],
			[
				"Stan",
				"mulle-c-developer/src/mulle-c/c-cmake/project/all/cmake/share/StandaloneC.cmake"
			],
			[
				"version.h",
				"mulle-sde-developer/src/mulle-sde/c/demo/executable/PROJECT_SOURCE_DIR/version.h"
			],
			[
				"import",
				"foundation-developer/src/foundation/objc/project/all/PROJECT_SOURCE_DIR/import.h"
			],
			[
				"execu",
				"mulle-sde-developer/src/mulle-sde/cmake/project/all/cmake/share/Executable.cmake"
			],
			[
				"optionaltool.da",
				"mulle-sde-developer/src/mulle-sde/c/optionaltool.darwin"
			],
			[
				"Compi",
				"mulle-c-developer/src/mulle-c/c-cmake/project/all/cmake/share/CompilerFlagsC.cmake"
			],
			[
				"Environment",
				"mulle-sde-developer/src/mulle-sde/cmake/project/all/cmake/share/Environment.cmake"
			],
			[
				"CompilerFlagsC.cmake",
				"mulle-c-developer/src/mulle-c/c-cmake/project/all/cmake/share/CompilerFlagsC.cmake"
			],
			[
				"optio",
				"mulle-sde-developer/src/mulle-sde/c/optionaltool.darwin"
			],
			[
				"linkorde",
				"mulle-sde/src/mulle-sde-linkorder.sh"
			],
			[
				"init-su",
				"mulle-sde-developer/src/mulle-sde/sde/init-subproject"
			],
			[
				"option",
				"mulle-sde-developer/src/mulle-sde/c/optionaltool.darwin"
			],
			[
				"optiona",
				"mulle-sde-developer/src/mulle-sde/sde/optionaltool.darwin"
			],
			[
				"optional",
				"mulle-sde-developer/src/mulle-sde/c/optionaltool"
			],
			[
				"source-tas",
				"mulle-sde-developer/src/mulle-sde/cmake/share/monitor/libexec/source-task.sh"
			],
			[
				"cmakefile-",
				"mulle-sde-developer/src/mulle-sde/cmake/share/match/match.d/95-cmakefile--all"
			],
			[
				"mulle-cmake-source-update",
				"mulle-match/mulle-cmake-source-update"
			],
			[
				"Motd",
				"mulle-sde-developer/src/mulle-sde/cmake/project/all/cmake/share/Motd.cmake"
			],
			[
				"-task.sh",
				"mulle-sde-developer/src/mulle-sde/c-cmake/share/monitor/libexec/cmake-sourcetree-update-task.sh"
			],
			[
				"source-c",
				"mulle-sde-developer/src/mulle-sde/cmake/share/monitor/bin/source-callback"
			],
			[
				"motd",
				"mulle-sde-developer/src/mulle-sde/sde/share/monitor/bin/create-build-motd"
			],
			[
				"-init",
				"mulle-sde/src/mulle-sde-init.sh"
			],
			[
				"mulle.sh",
				"mulle-sde/src/mulle-env/plugins/mulle.sh"
			],
			[
				"developer",
				"mulle-env/src/plugins/developer.sh"
			],
			[
				"c-so",
				"mulle-sde-developer/src/mulle-sde/c-cmake/share/monitor/bin/c-sourcetree-update"
			],
			[
				"create-build-motd",
				"mulle-sde-developer/src/mulle-sde/sde/share/sde/bin/create-build-motd"
			],
			[
				"0",
				"mulle-objc-developer/src/mulle-objc/objc/share/match.d/80-source--private-headers"
			],
			[
				"Frame",
				"mulle-sde-developer/src/mulle-sde/cmake/project/all/cmake/share/Framework.cmake"
			],
			[
				"InstallExec",
				"mulle-sde-developer/src/mulle-sde/cmake/project/all/cmake/share/InstallExecutable.cmake"
			],
			[
				"InstallL",
				"mulle-sde-developer/src/mulle-sde/cmake/project/all/cmake/share/InstallLibrary.cmake"
			],
			[
				"Start",
				"mulle-c-developer/src/mulle-c/c-cmake/project/all/cmake/share/StartupC.cmake"
			],
			[
				"CMakeList",
				"mulle-sde-developer/src/mulle-sde/cmake/project/library/CMakeLists.txt"
			],
			[
				"Files",
				"mulle-sde-developer/src/mulle-sde/cmake/project/all/cmake/share/Files.cmake"
			],
			[
				"cmake-sour",
				"mulle-sde-developer/src/mulle-sde/cmake/share/bin/cmake-sourcetree-update"
			],
			[
				"cmake-",
				"mulle-sde-developer/src/mulle-sde/cmake/share/bin/cmake-sourcetree-update"
			],
			[
				"sourcetree-update",
				"mulle-sde-developer/src/mulle-sde/cmake/share/bin/cmake-sourcetree-update"
			],
			[
				"private",
				"mulle-sde-developer/src/mulle-sde/c/share/match.d/80-source--private-headers"
			],
			[
				"Environment.",
				"mulle-sde-developer/src/mulle-sde/cmake/project/all/cmake/share/Environment.cmake"
			],
			[
				"PreIn",
				"mulle-c-developer/src/mulle-c/c-cmake/project/all/cmake/share/PreInstall.cmake"
			],
			[
				"Environm",
				"mulle-sde-developer/src/mulle-sde/cmake/project/all/cmake/share/Environment.cmake"
			],
			[
				"Environment.cmake",
				"mulle-sde-developer/src/mulle-sde/cmake/project/all/cmake/share/Environment.cmake"
			],
			[
				"source-u",
				"mulle-sde-developer/src/mulle-sde/c-cmake/share/bin/c-sourcetree-update"
			],
			[
				"5",
				"/Volumes/Source/srcO/mulle-objc/mulle-objc-developer/src/mulle-objc/cmake/share/match.d/50-source--private-headers"
			],
			[
				"50",
				"mulle-objc-developer/src/mulle-objc/cmake/share/match.d/50-source--private-headers"
			],
			[
				"50-",
				"mulle-sde-developer/src/mulle-sde/c/share/match.d/50-source--private-headers"
			],
			[
				"00-",
				"mulle-objc-developer/.mulle-sde/share/ignore.d/00-directories--none"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 550.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"/home/src/srcO/MulleFoundation/MulleFoundation.sublime-project"
			],
			[
				"bashf",
				"/Volumes/Source/srcM/mulle-bashfunctions/mulle-bashfunctions.sublime-project"
			],
			[
				"objc",
				"/home/src/srcO/mulle-objc/mulle-objc.sublime-project"
			],
			[
				"core",
				"/home/src/srcO/mulle-core/mulle-core.sublime-project"
			],
			[
				"MulleObjC",
				"/home/src/srcO/mulle-objc/mulle-objc.sublime-project"
			],
			[
				"ashf",
				"/home/src/srcM/mulle-bashfunctions/mulle-bashfunctions.sublime-project"
			],
			[
				"look",
				"/home/src/srcO/mulle-objc-methodlookup/mulle-objc-methodlookup.sublime-project"
			],
			[
				"ounda",
				"/Volumes/Source/srcO/MulleFoundation/MulleFoundation.sublime-project"
			],
			[
				"MulleFou",
				"/home/src/srcO/MulleFoundation/MulleFoundation.sublime-project"
			],
			[
				"mulle-c",
				"/Volumes/Source/srcO/mulle-c/mulle-c.sublime-project"
			],
			[
				"test",
				"/Volumes/Source/srcM/mulle-test/mulle-test.sublime-project"
			]
		],
		"width": 418.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 584.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 309.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
